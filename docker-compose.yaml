name: tax-management-system
services:

    # Jenkins in Docker Container
    docker:
        container_name: jenkins-docker
        privileged: true
        networks:
            bridge:
                aliases:
                    - docker
        environment:
            - DOCKER_TLS_CERTDIR=/certs
        volumes:
            - jenkins-docker-certs:/certs/client
            - jenkins-data:/var/jenkins_home
        ports:
            - 2376:2376
        image: docker:dind
        command: --storage-driver overlay2
    # My Jenkins BlueOcean Container
    myjenkins-blueocean:
        container_name: jenkins-blueocean
        restart: on-failure
        environment:
            - DOCKER_HOST=tcp://docker:2376
            - DOCKER_CERT_PATH=/certs/client
            - DOCKER_TLS_VERIFY=1
        volumes:
            - jenkins-data:/var/jenkins_home
            - jenkins-docker-certs:/certs/client:ro
        ports:
            - 8080:8080
            - 50000:50000
        image:  myjenkins-blueocean:2.492.3-1
        build:
            context: .\jenkins
            dockerfile: Dockerfile
        networks:
          - bridge
    
    # My SQL Container
    db:
        container_name: sqldb
        image: 530789571735.dkr.ecr.us-east-1.amazonaws.com/ng-backend:mysql
        restart: always
        ports: 
            - 3306:3306
        environment:
            MYSQL_ROOT_PASSWORD: root
            MYSQL_DATABASE: "tax filing management system"
        build:
            context: .\tax-management-sytem-backend\tax-management-system-schema
            dockerfile: Dockerfile
        networks:
          - bridge
    # My Spring API
    spring-api-backend:
        container_name: spring-api-backend
        environment:
            SPRING_DATASOURCE_URL: "jdbc:mysql://sqldb:3306/tax%20filing%20management%20system"
            SPRING_DATASOURCE_USERNAME: root
            SPRING_DATASOURCE_PASSWORD: root
        ports:
            - 9090:9090
        tty: true
        image: 530789571735.dkr.ecr.us-east-1.amazonaws.com/ng-backend:spring_api 
        build:
            context: tax-management-sytem-backend\tax-management-system-api
            dockerfile: Dockerfile
        depends_on:
          - db
        networks:
          - bridge
    # My Frontend React
    react-frontend:
        container_name: react-frontend
        ports:
            - 3000:3000
        image: 530789571735.dkr.ecr.us-east-1.amazonaws.com/ng-frontend:react_frontend
        build:
            context: tax-management-system-frontend
            dockerfile: Dockerfile
        depends_on:
          - db
        networks:
          - bridge

networks:
    bridge:
        driver: bridge
volumes:
    jenkins-data:
        external: true
        name: jenkins-data
    jenkins-docker-certs:
        external: true
        name: jenkins-docker-certs